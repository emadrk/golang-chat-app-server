{"ast":null,"code":"var _jsxFileName = \"/home/emad/code/chat_app_golang_js/frontend/webchat/src/app/pages/Chat/index.js\";\nimport React from 'react';\nimport { InputText } from '../../components/InputText';\nimport { Messages } from '../../components/Messages';\nimport { Status } from '../../components/Status';\nimport './styles.css';\nconst baseURL = 'ws://localhost:8080/chat';\nexport class Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ws: undefined,\n      username: '',\n      message: '',\n      messages: []\n    };\n  }\n\n  render() {\n    const {\n      ws,\n      messages,\n      username\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"WebChat\"), /*#__PURE__*/React.createElement(Status, {\n      status: ws ? 'connected' : 'disconnected',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), ws && /*#__PURE__*/React.createElement(Messages, {\n      messages: messages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      placeholder: ws ? 'Write message' : 'Enter with your username',\n      onChange: value => ws ? this.setMessage(value) : this.setUsername(value),\n      defaultValue: ws ? this.state.message : this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => ws ? this.sendMessage() : this.enterChat(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, ws ? 'Send' : 'Enter')));\n  }\n\n  enterChat() {\n    const {\n      username\n    } = this.state;\n    let ws = new WebSocket(baseURL + `?username=${username}`);\n\n    ws.onopen = evt => {\n      console.log('Websocket opened!', {\n        evt\n      });\n      console.log(\"i AM HGHEREEEE::::\", {\n        username\n      });\n    };\n\n    ws.onclose = evt => {\n      console.log('Websocket closed!', {\n        evt\n      });\n      this.setState({\n        ws: undefined\n      });\n    };\n\n    ws.onmessage = msg => {\n      console.log('Websocket message:', {\n        msg\n      });\n      this.setMessages(msg.data);\n    };\n\n    ws.onerror = error => {\n      console.log('Websocket error:', {\n        error\n      });\n    };\n\n    this.setState({\n      ws,\n      username: ''\n    });\n  }\n\n  sendMessage() {\n    const {\n      ws,\n      message\n    } = this.state;\n    ws.send(message);\n    this.setMessage('');\n  }\n\n  setUsername(value) {\n    this.setState({\n      username: value\n    });\n  }\n\n  setMessage(value) {\n    this.setState({\n      message: value\n    });\n  }\n\n  setMessages(value) {\n    let messages = this.state.messages.concat([JSON.parse(value)]);\n    this.setState({\n      messages\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/emad/code/chat_app_golang_js/frontend/webchat/src/app/pages/Chat/index.js"],"names":["React","InputText","Messages","Status","baseURL","Chat","Component","constructor","props","state","ws","undefined","username","message","messages","render","value","setMessage","setUsername","sendMessage","enterChat","WebSocket","onopen","evt","console","log","onclose","setState","onmessage","msg","setMessages","data","onerror","error","send","concat","JSON","parse"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { InputText } from '../../components/InputText';\nimport { Messages } from '../../components/Messages'\nimport { Status } from '../../components/Status';\nimport './styles.css';\n\nconst baseURL = 'ws://localhost:8080/chat';\n\nexport class Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ws: undefined,\n            username: '',\n            message: '',\n            messages: [],\n        }\n    }\n\n    render() {\n        const { ws, messages,username } = this.state;\n\n        return (\n            <div className=\"chat\">\n                <h1>WebChat</h1>\n                {/* <h1>New User Joined:{username}</h1> */}\n                <Status status={ws ? 'connected' : 'disconnected'} />\n                {\n                    ws && <Messages messages={messages} />\n                }\n                <div className=\"chat-inputs\">\n                    <InputText \n                        placeholder={ws ? 'Write message' : 'Enter with your username'}\n                        onChange={value => ws ? this.setMessage(value) : this.setUsername(value)}\n                        defaultValue={ws ? this.state.message : this.state.username}\n                    />\n                    <button type=\"button\" onClick={() => ws ? this.sendMessage() : this.enterChat()}>\n                        {ws ? 'Send' : 'Enter'}\n                    </button>    \n                </div>\n            </div>\n        )\n    }\n\n    enterChat() {\n        const { username } = this.state;\n\n        let ws = new WebSocket(baseURL + `?username=${username}`);\n\n        ws.onopen = (evt) => {\n            console.log('Websocket opened!', {evt});\n            console.log(\"i AM HGHEREEEE::::\",{ username })\n        }\n\n        ws.onclose = (evt) => {\n            console.log('Websocket closed!', {evt});\n            this.setState({ws: undefined});\n        }\n\n        ws.onmessage = (msg) => {\n            console.log('Websocket message:', {msg});\n            this.setMessages(msg.data);\n        }\n\n        ws.onerror = (error) => {\n            console.log('Websocket error:', {error});\n        }\n\n        this.setState({ws, username: ''});\n    }\n\n    sendMessage() {\n        const { ws, message } = this.state;\n\n        ws.send(message);\n        this.setMessage('');\n    }\n\n    setUsername(value) {\n        this.setState({username: value});\n    }\n\n    setMessage(value) {\n        this.setState({message: value});\n    }\n\n    setMessages(value) {\n        let messages = this.state.messages.concat([JSON.parse(value)]);\n        this.setState({messages});\n    }\n}"]},"metadata":{},"sourceType":"module"}